linters-settings:
  dupl:
    threshold: 100

  funlen:
    lines: 100
    statements: 50

  misspell:
    locale: US

  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/stellar/) # Custom section: groups all imports with the specified Prefix.
      - localmodule # Local module section: contains all local packages. This section is not present unless explicitly enabled.
    skip-generated: false
    # Enable custom order of sections.
    # If `true`, make the section order the same as the order of `sections`.
    # Default: false
    custom-order: true

  dogsled:
    # Checks assignments with too many blank identifiers.
    # Default: 2
    max-blank-identifiers: 3

  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 15

  wrapcheck:
    # An array of strings that specify substrings of signatures to ignore.
    # If this set, it will override the default set of ignored signatures.
    # See https://github.com/tomarrell/wrapcheck#configuration for more information.
    # Default: [".Errorf(", "errors.New(", "errors.Unwrap(", "errors.Join(", ".Wrap(", ".Wrapf(", ".WithMessage(", ".WithMessagef(", ".WithStack("]
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - errors.Join(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
    # An array of strings that specify regular expressions of signatures to ignore.
    # Default: []
    ignoreSigRegexps:
      - \.New.*Error\(
    # An array of strings that specify globs of packages to ignore.
    # Default: []
    ignorePackageGlobs:
      - encoding/*
      - github.com/pkg/*
      - github.com/stellar/*
    # An array of strings that specify regular expressions of interfaces to ignore.
    # Default: []
    ignoreInterfaceRegexps:
      - ^(?i)c(?-i)ach(ing|e)

  testifylint:
    enable-all: true
    disable:
      # TODO: try to enable it
      - go-require

  forbidigo:
    # Forbid the following identifiers (list of regexp).
    # Default: ["^(fmt\\.Print(|f|ln)|print|println)$"]
    forbid:
      - p: "^(fmt\\.Print(|f|ln)|print|println)$"
        msg: Do not commit debug print statements (in tests use t.Log()).
      - p: "^.*$"
        pkg: "^github.com/stellar/go/support/errors$"
        msg: Do not use stellar/go/support/errors, use the standard 'errors' package and fmt.Errorf().
    exclude-godoc-examples: false
    analyze-types: true

linters:
  enable-all: true
  disable:
    - gomnd
    - execinquery
    - depguard
    - nlreturn
    - godox
    # exhaustruct: enforcing exhaustive fields is useful in some cases, but there are
    #              too many legitimate default field values in Go
    - exhaustruct
    # err113: Enforcing errors.Is() is useful but cannot be enabled in isolation
    - err113
    - thelper
    - wsl
    - wrapcheck
    - testpackage
    # TODO: I didn't manage to make it accept short parameter names
    - varnamelen
    # TODO: consider enabling it later on
    - ireturn
    - godot
  presets: [ ]
  fast: false

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gosec
    - path: cmd/soroban-rpc/internal/integrationtest/infrastructure/
      linters:
        - gosec

run:
  timeout: 10m
