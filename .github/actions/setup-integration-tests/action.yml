name: 'Set up integration tests'
description: 'Set up Go & Rust, build artifacts, work around cache issues and Ubuntu quirks'
inputs:
  go-version:
    required: true
runs:
  using: "composite"
  steps:
  - uses: ./.github/actions/setup-go
    with:
      go-version: ${{ matrix.go }}
  - uses: stellar/actions/rust-cache@main
  - name: Build soroban contract fixtures
    shell: bash
    run: |
      rustup update
      rustup target add wasm32-unknown-unknown
      make build_rust
      make build-test-wasms

  - name: Install Captive Core
    shell: bash
    run: |
      # Workaround for https://github.com/actions/virtual-environments/issues/5245,
      # libc++1-8 won't be installed if another version is installed (but apt won't give you a helpful
      # message about why the installation fails)
      sudo apt-get remove -y libc++1-10 libc++abi1-10 || true

      sudo wget -qO - https://apt.stellar.org/SDF.asc | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=true sudo apt-key add -
      sudo bash -c 'echo "deb https://apt.stellar.org focal unstable" > /etc/apt/sources.list.d/SDF-unstable.list'
      sudo apt-get update && sudo apt-get install -y stellar-core="$PROTOCOL_20_CORE_DEBIAN_PKG_VERSION"
      echo "Using stellar core version $(stellar-core version)"

  # Docker-compose's remote contexts on Ubuntu 20 started failing with an OpenSSL versioning error.
  # See https://stackoverflow.com/questions/66579446/error-executing-docker-compose-building-webserver-unable-to-prepare-context-un
  - name: Work around Docker Compose problem
    shell: bash
    run: |
      sudo apt-get update
      sudo apt-get install -y ca-certificates curl gnupg

      # Install docker apt repo
      sudo install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      sudo chmod a+r /etc/apt/keyrings/docker.gpg
      echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

      # Install docker-compose v2 from apt repo
      sudo apt-get update
      sudo apt-get remove -y moby-compose
      sudo apt-get install -y docker-compose-plugin

      # add alias for docker compose
      ln -f -s /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
      
      echo "Docker Compose Version:"
      docker-compose version

  - name: Build libpreflight
    shell: bash
    run: make build-libpreflight
